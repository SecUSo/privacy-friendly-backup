<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="org.secuso.privacyfriendlybackup">

    <queries>
        <intent>
            <action android:name="org.secuso.privacyfriendlybackup.api.pfa.PFAAuthService" />
        </intent>
    </queries>

   <application
        android:name=".BackupApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:installLocation="preferExternal"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

       <provider
           android:name="androidx.startup.InitializationProvider"
           android:authorities="${applicationId}.androidx-startup"
           android:exported="false"
           tools:node="merge">
           <!-- If you are using androidx.startup to initialize other components -->
           <meta-data
               android:name="androidx.work.impl.WorkManagerInitializer"
               android:value="androidx.startup"
               tools:node="remove" />
       </provider>

        <activity android:name=".ui.importbackup.ImportBackupActivity"
            android:theme="@style/AppTheme.TranslucentOverlay"
            android:exported="true">
            <!--
                 Capture file open requests (pathPattern is honoured) where no
                 MIME type is provided in the Intent.  An Intent with a null
                 MIME type will never be matched by a filter with a set MIME
                 type, so we need a second intent-filter if we wish to also
                 match files with this extension and a non-null MIME type
                 (even if it is non-null but zero length).
            -->
            <intent-filter
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_import_backup"
                android:priority="50" >
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="file" />
                <data android:host="*" />
                <data android:mimeType="*/*" />

                <!--
                     Work around Android's ugly primitive PatternMatcher
                     implementation that can't cope with finding a . early in
                     the path unless it's explicitly matched.
                -->
                <data android:pathPattern=".*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.backup.*" />
            </intent-filter>

            <!--
                 Capture file open requests (pathPattern is honoured) where a
                 (possibly blank) MIME type is provided in the Intent.  This
                 filter may only be necessary for supporting ES File Explorer,
                 which has the probably buggy behaviour of using an Intent
                 with a MIME type that is set but zero-length.  It's
                 impossible to match such a type except by using a global
                 wildcard.
            -->
            <intent-filter
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_import_backup"
                android:priority="50" >
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="content" />
                <data android:host="*" />
                <data android:mimeType="*/*" />

                <!--
                     Work around Android's ugly primitive PatternMatcher
                     implementation that can't cope with finding a . early in
                     the path unless it's explicitly matched.
                -->
                <data android:pathPattern=".*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.backup.*" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.backup.*" />
            </intent-filter>
        </activity>
        <activity android:name=".ui.inspection.DataInspectionActivity"
            android:parentActivityName=""/>
        <activity android:name=".ui.main.MainActivity"
            android:configChanges="orientation|screenSize"
            android:label="@string/app_name"
            android:launchMode="singleInstance"
            android:theme="@style/AppTheme.NoActionBar"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ui.common.DisplayMenuItemActivity"
            android:launchMode="singleTop"
            android:configChanges="orientation|screenSize"
            android:parentActivityName=".ui.main.MainActivity"
            android:theme="@style/AppTheme.NoActionBar">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="org.secuso.privacyfriendlybackup.ui.main.MainActivity" />
        </activity>
        <activity android:name=".ui.encryption.UserInteractionRequiredActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity=""
            android:theme="@style/AppTheme.Transparent" />

        <service android:name=".services.BackupService"
            android:enabled="true"
            android:exported="true"
            android:process=":backup"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="org.secuso.privacyfriendlybackup.services.BackupService" />
            </intent-filter>
        </service>

    </application>

</manifest>